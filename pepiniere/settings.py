"""
Django settings for pepiniere project.

Generated by 'django-admin startproject' using Django 3.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
from . import settings_private
from os.path import dirname
import warnings
import pymysql
pymysql.install_as_MySQLdb()

warnings.simplefilter('error', DeprecationWarning)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = dirname(dirname(os.path.abspath(__file__)))
CONTENT_DIR = os.path.join(BASE_DIR, 'content')

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = settings_private.SECRET_KEY

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'import_export',
    'onlineshop.apps.OnlineshopConfig',
    'cart.apps.CartConfig',
    'account.apps.AccountConfig',
    'order.apps.OrderConfig',
    'bootstrap5',
    'crispy_forms',
    'mathfilters',
    'bootstrap_datepicker_plus',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'pepiniere.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(CONTENT_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'libraries': {
                'my_templatetag': 'onlineshop.templatetags.mode_admin',
            },
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pepiniere.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {

    # 'default': settings_private.DEFAULT, # SQLLITE
    'default': settings_private.MYSQL_DEV,  # MYSQL DEV
    # 'default': settings_private.MYSQL_PROD,  # MYSQL PROD
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'fr-FR'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

# USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(CONTENT_DIR, 'static'),
)
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATIC_ROOT = os.path.join(CONTENT_DIR, 'assets')
MEDIA_ROOT = os.path.join(CONTENT_DIR, 'media')
MEDIA_URL = '/media/'


CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"
CART_SESSION_ID = 'cart'
LOGIN_URL = '/account/login'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

DATA_UPLOAD_MAX_NUMBER_FIELDS = 10240

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

IMPORT_EXPORT_USE_TRANSACTIONS = True

# Logging
LOG_DIR = os.path.join(BASE_DIR, 'logs')
if not os.path.exists(LOG_DIR):
    os.makedirs(LOG_DIR)

LOG_ERROR = os.path.join(LOG_DIR, 'error.log')
open(LOG_ERROR, 'a').close()
LOG_ACCESS_REFUSED = os.path.join(LOG_DIR, 'access_refused.log')
open(LOG_ACCESS_REFUSED, 'a').close()
LOG_ORDER_FILE = os.path.join(LOG_DIR, 'order_file.log')
open(LOG_ORDER_FILE, 'a').close()
LOG_PRODUIT_FILE = os.path.join(LOG_DIR, 'produit_file.log')
open(LOG_PRODUIT_FILE, 'a').close()
LOG_CART_FILE = os.path.join(LOG_DIR, 'cart_file.log')
open(LOG_CART_FILE, 'a').close()
LOG_CONNEXION_FILE = os.path.join(LOG_DIR, 'connexion_file.log')
open(LOG_CONNEXION_FILE, 'a').close()

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {message}',
            'style': '{',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'error_file' : {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': LOG_ERROR,
        },
        'order_model': {
            'level': 'INFO',
            'class': 'pepiniere.LogHandler.PepiniereModelHandler',
            'formatter': 'verbose',
        },
        'order_file': {
            'level': 'INFO',
            'class': 'pepiniere.LogHandler.PepiniereFileHandler',
            'filename': LOG_ORDER_FILE,
            'formatter': 'verbose',
        },
        'produit_file': {
            'level': 'INFO',
            'class': 'pepiniere.LogHandler.PepiniereFileHandler',
            'filename': LOG_PRODUIT_FILE,
            'formatter': 'verbose',
        },
        'cart_file': {
            'level': 'INFO',
            'class': 'pepiniere.LogHandler.PepiniereFileHandler',
            'filename': LOG_CART_FILE,
            'formatter': 'verbose',
        },
        'connexion_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': LOG_CONNEXION_FILE,
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['error_file'],
            'level': 'ERROR',
            'propagate': True,
        },
        'connexion': {
            'handlers': ['connexion_file'],
            'level': 'INFO',
            'propagate': True,
        },
        'order': {
            'handlers': ['order_model'],
            'level': 'INFO',
            'propagate': True,
        },
        'produit': {
            'handlers': ['order_model'],
            'level': 'INFO',
            'propagate': True,
        },
        'cart': {
            'handlers': ['order_model'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}
